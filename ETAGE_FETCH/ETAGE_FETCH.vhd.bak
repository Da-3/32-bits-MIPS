library ieee;
use ieee.std_logic_1164.all;

entity ETAGE_FETCH is 

port ( pc,datain :          in std_logic_vector (31 downto 0);
		       clk:		in		std_logic;	
             inst :        out std_logic_vector (31 downto 0));
end ETAGE_FETCH ; 


architecture rtl of ETAGE_FETCH is 
 signal is_tag_equal, hit , valid_cach :               std_logic;
 signal inst_ram , inst_sig , inst_cach : std_logic_vector (31 downto 0);
 signal tag_cach :                        std_logic_vector (27 downto 0);

	Component On_Chip_ram32x32 is
		PORT
			(
				address	: IN 	STD_LOGIC_VECTOR (4 DOWNTO 0);
				clock		: IN 	STD_LOGIC  := '1';
				data		: IN 	STD_LOGIC_VECTOR (31 DOWNTO 0);
				wren		: IN 	STD_LOGIC ;
				q			: OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
			);
	END Component;
	
	component CACHE_MEM is 
	port (
		hit : in std_logic;
		data_in, pc : in std_logic_vector(31 downto 0);
		data_out : out std_logic_vector(31 downto 0);
		tag_out : out std_logic_vector(27 downto 0); 
		valid_out: out std_logic 
	);
 end component ;
 
 component MUX21 is
	generic (N:integer:=32); 
	port(A,B: in std_logic_vector(N-1 downto 0);
		sel : in std_logic;
		s   :out std_logic_vector(N-1 downto 0) );
 end component;


			
begin
U1: On_Chip_ram32x32 port map ( Address => pc(4 downto 0),Clock => clk,data => datain, wren => not(hit) ,q => inst_ram);
end rtl;